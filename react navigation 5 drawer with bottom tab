// add drawer with bottom tabs react navigation 5

******************** Navigator.js ********************

/////////////////Code

const Drawer = createDrawerNavigator();

const MyDrawer=(props)=> {
  return (
    <Drawer.Navigator drawerContent={(props) => <DrawerComponent {...props}/> }>

        <Drawer.Screen
        name="Tab" component={Tabs}/>

    </Drawer.Navigator>
  );
}

const Tab = createBottomTabNavigator();     

const Tabs=()=> {
  return (
      <Tab.Navigator
      shifting={true}
      screenOptions={({ route }) => ({
          tabBarIcon: ({ focused, color, size }) => {
            let iconName;
            let yesFoc;
            if (route.name === 'Home') {

              if(focused){
             yesFoc= <Animated.View style={{backgroundColor:'#1976D2', height:4, width:60, position:'absolute',top:-6, alignSelf:'center', borderRadius:5,
  transform: [
                            {
                                translateX: anim.interpolate({
                                    inputRange: [0, 1],
                                    outputRange: [0, 120]
                                })
                            },
          ]
       }}/>

              iconName=require('./resources/bottomtab/home_active.png')
              }else{
              iconName= require('./resources/bottomtab/home_inactive.png')                
              }

            } else if(route.name === 'Consult Now'){

            return<Image
                            source={require('./resources/bottomtab/consult.png')}
                            style={{height:55, width:55, resizeMode:'contain', marginBottom:25}}
                        />;

              // iconName = focused
              // ? require('./resources/bottomtab/consult.png')
              // : require('./resources/bottomtab/consult.png')
            } else if(route.name === 'My Account'){
              if(focused){
              iconName=require('./resources/bottomtab/account_active.png')
                       yesFoc= <View style={{backgroundColor:'#1976D2', height:4, width:60, position:'absolute',top:-6, alignSelf:'center', borderRadius:5}}/>
              }else{
              iconName= require('./resources/bottomtab/account_inactive.png')                
              }

              // iconName = focused
              // ? require('./resources/bottomtab/account_active.png')
              // : require('./resources/bottomtab/account_inactive.png')
            }
            // You can return any component that you like here!
            return(
            <View>
            {yesFoc}
            <Image
                source={iconName}
                style={{height:20, width:20, resizeMode:'contain',alignSelf:'center'}}
                />
            </View>)
          },
        })}
        tabBarOptions={{
          height: 80,
          activeTintColor: '#1976D2',
          inactiveTintColor: 'gray',
          activeBackgroundColor :'white',
          inactiveBackgroundColor :'white',
          labelStyle :{fontFamily: 'AvenirLTStd-Heavy'}
        }}
      >
        <Tab.Screen name="Home" component={Home} />
        <Tab.Screen name="Consult Now" component={ConsultNow}
         />
        <Tab.Screen name="My Account" component={MyAccount}
        listeners={{
    tabPress: e => {
      // Prevent default action
      console.log('ji')
    },
  }} />
      </Tab.Navigator>

  );
}

************************** WHOLE Navigator.js *****************************************
import React, {Component} from 'react';
import { View, Text, Image, Animated, Easing } from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import * as Animatable from 'react-native-animatable';
import { createDrawerNavigator } from '@react-navigation/drawer';

import Splash from './Splash'
import Slider from './Slider'
import Login from './Login'
import Signup from './Signup'
import Otp from './Otp'
import Home from './Home'
import MyAccount from './MyAccount'
import ConsultNow from './ConsultNow'

import DrawerComponent from './DrawerComponent'


const config = {
  animation: 'spring',
  config: {
    stiffness: 1000,
    damping: 500,
    mass: 3,
    overshootClamping: true,
    restDisplacementThreshold: 0.01,
    restSpeedThreshold: 0.01,
  },
};

const anim = new Animated.Value(0)

const handleAnimation = () => {
        Animated.timing(anim, {
            toValue: 1,
            duration: 1000,
            easing: Easing.ease,
            useNativeDriver: true
        }).start()

}

const Drawer = createDrawerNavigator();

const MyDrawer=(props)=> {
  return (
    <Drawer.Navigator drawerContent={(props) => <DrawerComponent {...props}/> }>

        <Drawer.Screen
        name="Tab" component={Tabs}/>

    </Drawer.Navigator>
  );
}

const Tab = createBottomTabNavigator();     

const Tabs=()=> {
  return (
      <Tab.Navigator
      shifting={true}
      screenOptions={({ route }) => ({
          tabBarIcon: ({ focused, color, size }) => {
            let iconName;
            let yesFoc;
            if (route.name === 'Home') {

              if(focused){
             yesFoc= <Animated.View style={{backgroundColor:'#1976D2', height:4, width:60, position:'absolute',top:-6, alignSelf:'center', borderRadius:5,
  transform: [
                            {
                                translateX: anim.interpolate({
                                    inputRange: [0, 1],
                                    outputRange: [0, 120]
                                })
                            },
          ]
       }}/>

              iconName=require('./resources/bottomtab/home_active.png')
              }else{
              iconName= require('./resources/bottomtab/home_inactive.png')                
              }

            } else if(route.name === 'Consult Now'){

            return<Image
                            source={require('./resources/bottomtab/consult.png')}
                            style={{height:55, width:55, resizeMode:'contain', marginBottom:25}}
                        />;

              // iconName = focused
              // ? require('./resources/bottomtab/consult.png')
              // : require('./resources/bottomtab/consult.png')
            } else if(route.name === 'My Account'){
              if(focused){
              iconName=require('./resources/bottomtab/account_active.png')
                       yesFoc= <View style={{backgroundColor:'#1976D2', height:4, width:60, position:'absolute',top:-6, alignSelf:'center', borderRadius:5}}/>
              }else{
              iconName= require('./resources/bottomtab/account_inactive.png')                
              }

              // iconName = focused
              // ? require('./resources/bottomtab/account_active.png')
              // : require('./resources/bottomtab/account_inactive.png')
            }
            // You can return any component that you like here!
            return(
            <View>
            {yesFoc}
            <Image
                source={iconName}
                style={{height:20, width:20, resizeMode:'contain',alignSelf:'center'}}
                />
            </View>)
          },
        })}
        tabBarOptions={{
          height: 80,
          activeTintColor: '#1976D2',
          inactiveTintColor: 'gray',
          activeBackgroundColor :'white',
          inactiveBackgroundColor :'white',
          labelStyle :{fontFamily: 'AvenirLTStd-Heavy'}
        }}
      >
        <Tab.Screen name="Home" component={Home} />
        <Tab.Screen name="Consult Now" component={ConsultNow}
         />
        <Tab.Screen name="My Account" component={MyAccount}
        listeners={{
    tabPress: e => {
      // Prevent default action
      console.log('ji')
    },
  }} />
      </Tab.Navigator>

  );
}


const Stack = createStackNavigator();

function App() {
  return (
    <NavigationContainer>

      <Stack.Navigator screenOptions={({ route, navigation }) => ({
    headerShown: false,
  })}
      >
        <Stack.Screen
        name="Splash" component={Splash} />

        <Stack.Screen
        name="Slider" component={Slider} />

       <Stack.Screen name="Drawer" component={MyDrawer} />

        <Stack.Screen name="Tab" component={Tabs} />

        <Stack.Screen
        name="Otp" component={Otp}/>

        <Stack.Screen
        name="Login" component={Login} />

        <Stack.Screen
        name="Signup" component={Signup} />

        <Stack.Screen
        name="ConsultNow" component={ConsultNow} />

      </Stack.Navigator>
    </NavigationContainer>
  );
}


export default App;


******************** DrawerComponent.js ***********************
import React, {Component} from 'react';
import {ScrollView, Text, View ,Linking,StyleSheet,Image,TouchableOpacity,Alert,Share} from 'react-native';
import Button from 'react-native-button';
import { CommonActions } from '@react-navigation/native';
import AsyncStorage from '@react-native-community/async-storage';

const GLOBAL = require('./Global');

class DrawerComponent extends React.Component {

    constructor(props){
        super(props)
        const { navigation } = this.props;
        this.state = {
            modalVisible: false,
        }
    }
    
    componentDidMount() {

    }

    _YesLogout=()=>{

        AsyncStorage.removeItem('userID');

        this.props
            .navigation
            .dispatch(CommonActions.reset({
                index: 0,
                routes: [
                        {name: 'Login',
                        params: { someParams: 'parameters goes here...' },
                      },
                ],
            }))


        // this.props.navigation.dispatch(DrawerActions.closeDrawer())

    }


    navigateToScreen1 = (route) => () => {

        Alert.alert('Logout!','Are you sure you want to Logout?',
            [{text:"Cancel"},
                {text:"Yes", onPress:()=>this._YesLogout()
                },
            ],
            {cancelable:false}
        )

    }


    navigateToScreen = (route) => () => {

        const navigateAction = NavigationActions.navigate({
            routeName: route
        });
        this.props.navigation.dispatch(navigateAction);
        // this.props.navigation.dispatch(DrawerActions.closeDrawer())
    }

    render () {

        return (
            <View style={{flex:1, backgroundColor:'#1972d6'}}>
                <ScrollView>
                    <View style={{backgroundColor:'white',}}>
                        <View  style={styles.headertop}>

                            <View style={{marginTop:20, marginLeft:20, flexDirection: 'column'}}>

                            <Image style={{width:70, height:70, borderRadius:35, marginLeft:5}}
                            source={require('./resources/logo.png')}
                            />
                                <View style={{flexDirection:'column', marginTop:5,}}>
                                    <Text style = {{marginTop:10,color : 'white',marginLeft : 10,fontSize: 17, height:'auto',fontFamily:'Konnect-Regular'}} >
                                        USERNAME
                                    </Text>
                                    <Text style = {[styles.drawerText, {color:'white'}]} >
                                        EMAIL
                                    </Text>

                                </View>
                        <TouchableOpacity onPress={()=> this.props.navigation.navigate('EditProfile')}>
                                <View style={{marginTop:15,padding:5, height:25, overflow:'hidden', borderRadius:15,marginLeft:10,    borderWidth: 2,width:120,marginBottom:10,
                            borderColor:'white' ,backgroundColor: '#1972d6', flexDirection:'row', alignItems:'center', justifyContent:'center'}}>

                              <Text style={{fontSize:12, color:'white',fontFamily:'Konnect-Medium',alignSelf:'center' }}>Edit Profile</Text>

                            </View>
                            </TouchableOpacity>
                        </View>
                            </View>
                            
                        <View style={styles.menuItem}>
                            <Image style={styles.drawericon}
                                   source={require('./resources/logo.png')} />
                            <Text style = {styles.drawerTexts}
                                  onPress={()=>this.props.navigation.toggleDrawer()}>
                                Home
                            </Text>
                        </View>

                        <View style={styles.menuItem}>
                            <Image style={styles.drawericon}
                                   source={require('./resources/logo.png')} />
                            <Text style = {styles.drawerTexts}
                                  onPress={this.navigateToScreen1('Login')}>
                                Logout
                            </Text>
                        </View>

                    </View>
                </ScrollView>
            </View>
        );
    }
}

const styles = StyleSheet.create({
    drawerText :{
        marginTop : 2,
        color : 'white',
        marginLeft : 10,
        fontSize: 13,
        fontFamily:'Konnect-Medium'
    },
    headertop :{
        width : 300,
        height : 220,
        backgroundColor : '#1972d6',
        flexDirection:'column'
    },
    menuItem:{
        padding: 10,
        borderWidth: 0.5,
        borderColor: '#d6d7da'
    },
    drawericon: {
        borderLeftWidth: 1,
        width: 20,
        height: 20,
        marginLeft : 8 ,
        marginTop : 3,
        resizeMode:'contain'
    },
    drawerTexts: {
        width: 'auto',
        height: 22,
        marginLeft : 45 ,
        marginTop : -18,
        color: 'black',
        fontFamily: 'Konnect-Regular'
    },
})

export default DrawerComponent;

******************** How to call *********************
       this.props.navigation.replace('Drawer')

      <TouchableOpacity onPress={()=> this.props.navigation.toggleDrawer()}>
      <Image style={{width:43, height:43, resizeMode:'contain'}}
      source={require('./resources/logo.png')}/>
      </TouchableOpacity>
       
       
