following code contains react native maps (get current user location), image picker, check-box, dashed view

//////////////////////// full code ///////////////////////


import React, {Component} from 'react';
import {Animated,ActivityIndicator,Platform,TouchableOpacity,TextInput, TouchableNativeFeedback,StyleSheet,StatusBar,AsyncStorage, Text,Alert, View,Image,Dimensions,FlatList} from 'react-native';
const window = Dimensions.get('window');
const STATUSBAR_HEIGHT = Platform.OS === 'ios' ? 20 : StatusBar.currentHeight;
const APPBAR_HEIGHT = Platform.OS === 'ios' ? 44 : 56;
const GLOBAL = require('./Global');
const { width, height } = Dimensions.get('window');
import Button from 'react-native-button';
import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
const equalWidth =  (width -20 )
//const APPBAR_HEIGHT = Platform.OS === 'ios' ? 44 : 56;
import ImagePicker from 'react-native-image-picker';
import CheckBox from 'react-native-check-box'
import MapView, { PROVIDER_GOOGLE } from 'react-native-maps'; // remove PROVIDER_GOOGLE import if not using Google Maps
import { Marker } from 'react-native-maps';


const ASPECT_RATIO = width / height
const LATITUDE_DELTA = 0.0922
const LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO
type Props = {};
const MyStatusBar = ({backgroundColor, ...props}) => (
<View style={[styles.statusBar, { backgroundColor }]}>
  <StatusBar translucent backgroundColor={backgroundColor} {...props} />
</View>
);

const options = {
  title: 'Upload Photo!',
  allowsEditing: true,
  maxWidth: 500,
  maxHeight: 500,
  storageOptions: {
    skipBackup: true,
    path: 'images',
    allowsEditing: true,
  },
      allowsEditing: true,
};


export default class GeoTag extends Component<Props> {

   	static navigationOptions = {
      header: null
    };
  constructor(props) {
      super(props)
      this.state = {
        saddress:'',
          loading :false,avatarSource:'', imageget:0,marginBottom:1,
          initialPosition: {
       latitude: 0,
       longitude: 0,
       latitudeDelta: 0,
       longitudeDelta: 0,
     },
      }
    }

    componentWillMount() {
     }

     componentDidMount() {
    navigator.geolocation.getCurrentPosition((position) => {
      var lat = parseFloat(position.coords.latitude)
      var long = parseFloat(position.coords.longitude)

      var initialRegion = {
        latitude: lat,
        longitude: long,
        latitudeDelta: LATITUDE_DELTA,
        longitudeDelta: LONGITUDE_DELTA,
      }

      this.setState({initialPosition: initialRegion})

    },
    (error) => alert(JSON.stringify(error)),
    {enableHighAccuracy: false, timeout: 20000,});
  }

  uploadImage=()=>{
    ImagePicker.showImagePicker(options, (response) => {
   console.log('Response = ', response);

   if (response.didCancel) {
     console.log('User cancelled image picker');
   } else if (response.error) {
     console.log('ImagePicker Error: ', response.error);
   }else{
        GLOBAL.profile = response.uri
     const source = { uri: response.uri };
//     CompArray.push(source);

     this.setState({
     avatarSource: source.uri,
     imageget:1
   });
   }
 });
   }


     showLoading() {
           this.setState({loading: true})
        }

        hideLoading() {
           this.setState({loading: false})
        }


     back = () => {
   this.props.navigation.goBack()
  }

  _onMapReady = () => this.setState({marginBottom: 0})

   render() {
         if(this.state.loading){
return(
  <View style={{flex: 1 ,backgroundColor: 'white'}}>
  <ActivityIndicator style = {styles.loading}

 size="large" color="#141414" />
  </View>
)
}
    return (

      <View style={styles.container}>
         <MyStatusBar backgroundColor="#141414" barStyle="light-content" />
        <View style = {styles.appBar} >
        <View style = {{flex:1,flexDirection:'row', marginTop:9}}>
                         <Text style={{marginLeft : 15,marginTop:12,fontSize : 16,color :'white',fontFamily: 'avenir_book',}}>GEO TAG</Text>
        </View>

          </View>
          <KeyboardAwareScrollView keyboardShouldPersistTaps='always'>
          <View style={{flex:1, backgroundColor:'#f7f7f7',}}>
          <TouchableOpacity onPress={()=>this.uploadImage()}>
          <View style={{width:width-40, height:150, margin:20,borderColor: '#7d7d7d',
    borderStyle: 'dashed',
    borderWidth: 2,
    borderRadius: 1,}}>
    {this.state.imageget==0 && (
      <Image style={{width:120, height:80, resizeMode:'contain', marginTop:15,alignSelf:'center'}} source={require('./upload_image.png')}/>

    )}
    {this.state.imageget!=0 && (
      <Image style={{width:120, height:80,  marginTop:15,alignSelf:'center'}} source={{uri:this.state.avatarSource}}/>

    )}
    <Text style={{fontSize:15, fontFamily:'avenir_book', color:'#2b2829', marginTop:10,alignSelf:'center'}}>Take photo and upload</Text>
          </View>
          </TouchableOpacity>

          <View style={{marginLeft:20, marginRight:20,marginTop:10}}>
          <Text style={{fontSize:15, fontFamily:'avenir_book', color:'#2b2829',marginLeft:5}}>Capture Current Location</Text>
          <MapView
                provider={PROVIDER_GOOGLE} // remove if not using Google Maps
                style={{width:width-40, height:300, marginTop:10, marginBottom:this.state.marginBottom}}
                initialRegion={this.state.initialPosition}
                showsMyLocationButton={true}
                showsUserLocation={true}
                onMapReady={this._onMapReady}

                >
                <Marker
      coordinate={this.state.initialPosition}
      title={'Harshit'}
      description={'You are here!'}
    />

              </MapView>
          </View>

          <Text style={{fontFamily: 'avenir_book', color:'#2b2829', fontSize:15, marginTop:30, marginLeft:25}}>Notes</Text>
          <View style={{flexDirection:'row', alignSelf:'center',borderBottomWidth:2,borderBottomColor :'#bfbfbf',}}>
          <TextInput style = {{ width : width - 40 ,height : 120 ,color :'black' ,fontSize : 16 ,fontFamily: 'avenir_book',marginTop:5}}
          placeholder="Write your notes here.."
          textAlignVertical={'top'}
          placeholderTextColor="#2b2829"
          onChangeText={(text) => this.setState({notes:text})}
          >
        </TextInput>
          </View>

          <CheckBox
              style={{flex: 1, padding: 10, marginTop:20, marginLeft:10}}
              onClick={()=>{
                this.setState({
                    isChecked:!this.state.isChecked
                })
              }}
              checkBoxColor={'#2b2829'}
              rightTextStyle={{fontFamily:'avenir_book',color:'#252727'}}
              isChecked={this.state.isChecked}
              rightText={"Mark as potential lead"}
          />
          <CheckBox
              style={{flex: 1, padding: 10, marginLeft:10}}
              onClick={()=>{
                this.setState({
                    isCheckeds:!this.state.isCheckeds
                })
              }}
              rightTextStyle={{fontFamily:'avenir_book', color:'#252727'}}
              isChecked={this.state.isCheckeds}
              checkBoxColor={'#2b2829'}
              rightText={"Pending Customer"}
          />


                    <Button
          containerStyle={{padding:18,elevation:5,
          height:55, overflow:'hidden', borderRadius:8, backgroundColor: '#2b2829', width:width-40, alignSelf:'center', marginRight:20,marginLeft:20, marginTop:10, marginBottom:15}}
          disabledContainerStyle={{backgroundColor: 'grey'}}
          style={{fontSize: 14, color: 'white', fontFamily: 'avenir_book',fontWeight: '400',}}
           onPress={this.buttonClickSubmit}>
           SUBMIT
          </Button>

          </View>

          </KeyboardAwareScrollView>
      </View>


    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  statusBar: {
    height: STATUSBAR_HEIGHT,
  },


  appBar: {
    backgroundColor:'#2b2829',
    height: APPBAR_HEIGHT,

  },
  loading: {
            position: 'absolute',
            left: window.width/2 - 30,

            top: window.height/2,

            opacity: 0.5,

            justifyContent: 'center',
            alignItems: 'center'
        },
  content: {
    flex: 1
  },
});
